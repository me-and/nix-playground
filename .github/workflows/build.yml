name: Build
on: [push]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runner:
#          - ubuntu-latest
          - ubuntu-24.04-arm
        target:
          - git
          - gitMinimal
          - gitSVN
          - gitFull
          - git-doc
          - nixosTests.gitdaemon
          - nixosTests.buildbot
          - tests.fetchgit
    runs-on: ${{matrix.runner}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30
      - name: Restore Nix store
        uses: nix-community/cache-nix-action/restore@v6
        with:
          primary-key: git-${{matrix.runner}}-${{hashFiles('default.nix')}}-separate-${{matrix.target}}-${{github.run_id}}
          restore-prefixes-all-matches: git-${{matrix.runner}}-
      - name: Build
        timeout-minutes: 300
        run: nix-build -A ${{matrix.target}}
      - name: Save Nix store
        if: always()
        uses: nix-community/cache-nix-action/save@v6
        with:
          primary-key: git-${{matrix.runner}}-${{hashFiles('default.nix')}}-separate-${{matrix.target}}-${{github.run_id}}

  merge-caches:
    name: Merge Nix caches
    needs: build
    concurrency:
      group: cachemerge
    permissions:
      actions: write
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-24.04-arm
    runs-on: ${{matrix.runner}}
    steps:
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30
      - name: Merge caches
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: git-${{matrix.runner}}-${{hashFiles('default.nix')}}-merged-${{github.run_id}}
          restore-prefixes-all-matches: git-${{matrix.runner}}-
          purge: true
          purge-prefixes: git-${{matrix.runner}}-
          purge-created: 0
          purge-primary-key: never
